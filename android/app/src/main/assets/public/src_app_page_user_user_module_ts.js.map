{"version":3,"file":"src_app_page_user_user_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEhB;AAEvC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gDAAQ;KACpB;CACF,CAAC;IAMW,qBAAqB,SAArB,qBAAqB;CAAG;AAAxB,qBAAqB;IAJjC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,qBAAqB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBO;AACM;AACF;AAEA;AAEiB;AAEvB;IAW1B,cAAc,SAAd,cAAc;CAAG;AAAjB,cAAc;IAT1B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,uEAAqB;SACtB;QACD,YAAY,EAAE,CAAC,gDAAQ,CAAC;KACzB,CAAC;GACW,cAAc,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACnBuB;AAElD,4CAA4C;AACC;AACoD;AACtC;IAO9C,QAAQ,SAAR,QAAQ;IAgBnB;QAdA,+BAA+B;QAE/B,yBAAyB;QACzB,QAAG,GAAG,2DAAa,CAAC,8EAAoB,CAAC,CAAC;QAE1C,+BAA+B;QAC/B,OAAE,GAAG,gEAAY,EAAE,CAAC;QAKpB,gDAAgD;QAChD,YAAO,GAAe,EAAE,CAAC;IAET,CAAC;IAEjB,QAAQ;QAEN,gGAAgG;QAChG,8DAAU,CAAC,yDAAK,CACd,8DAAU,CAAC,IAAI,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE,gCAAgC;QAC/D,yDAAK,CAAC,SAAS,EAAE,IAAI,EAAE,OAAO,CAAC,EAAE,2DAA2D;QAC5F,yDAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,iCAAiC;QAC9D,2DAAO,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,2EAA2E;SACpG,EAAE,CAAC,QAAQ,EAAE,EAAE;YAEd,oDAAoD;YACpD,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YAElB,iCAAiC;YACjC,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;gBAEvB,mCAAmC;gBACnC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;gBAEzB,sCAAsC;gBACtC,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;gBAExB,8DAA8D;gBAC9D,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAEjC,CAAC,CAAC,CAAC;QAEL,CAAC,CAAC,CAAC;IACL,CAAC;CACF;;AA/CY,QAAQ;IALpB,wDAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,iEAA+B;;KAEhC,CAAC;GACW,QAAQ,CA+CpB;AA/CoB","sources":["./src/app/page/user/user-routing.module.ts","./src/app/page/user/user.module.ts","./src/app/page/user/user.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserPage } from './user.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UserPageRoutingModule } from './user-routing.module';\n\nimport { UserPage } from './user.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    UserPageRoutingModule\n  ],\n  declarations: [UserPage]\n})\nexport class UserPageModule {}\n","import { Component, OnInit } from '@angular/core';\n\n// Importa todas as dependências necessárias\nimport { initializeApp } from 'firebase/app';\nimport { collection, query, where, onSnapshot, getFirestore, orderBy } from 'firebase/firestore';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.page.html',\n  styleUrls: ['./user.page.scss'],\n})\nexport class UserPage implements OnInit {\n\n  ///// Variáveis da página /////\n\n  // Conexão com o Firebase\n  app = initializeApp(environment.firebase);\n\n  // Conexão com o banco de dados\n  db = getFirestore();\n\n  // Armazenará as páginas de manual\n  manual: any;\n\n  // Armazena todas as páginas para exibir no HTML\n  manuals: Array<any> = [];\n\n  constructor() { }\n\n  ngOnInit() {\n\n    // Conecta ao banco de dados e obtém todos os documentos da coleção 'manual' cujo 'section=user'\n    onSnapshot(query(\n      collection(this.db, 'manual'), // Conecta-se à coleção 'manual'\n      where('section', '==', 'users'), // Obtem somente os documentos que atendem a este requisito\n      where('status', '==', 'on'), // Somente se o 'status' for 'on'\n      orderBy('date', 'desc') // Obtém os documentos ordenados pela data, da mais nova para a mais antiga\n    ), (myManual) => {\n\n      // Limpa a lista de manuais para carregar novamente.\n      this.manuals = [];\n\n      // Loop que itera cada faq obtida\n      myManual.forEach((doc) => {\n\n        // Armazena dados na variável 'faq'\n        this.manual = doc.data();\n\n        // Armazena o ID do documento em 'faq'\n        this.manual.id = doc.id;\n\n        // Adiciona conteúdo de 'faq' em 'faqs' para ser usado na view\n        this.manuals.push(this.manual);\n\n      });\n\n    });\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}