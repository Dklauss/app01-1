{"version":3,"file":"src_app_page_faq_faq_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAElB;AAErC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8CAAO;KACnB;CACF,CAAC;IAMW,oBAAoB,SAApB,oBAAoB;CAAG;AAAvB,oBAAoB;IAJhC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,oBAAoB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBQ;AACM;AACF;AAEA;AAEe;AAEvB;IAWxB,aAAa,SAAb,aAAa;CAAG;AAAhB,aAAa;IATzB,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,qEAAoB;SACrB;QACD,YAAY,EAAE,CAAC,8CAAO,CAAC;KACxB,CAAC;GACW,aAAa,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBwB;AACD;AAEjD,4CAA4C;AACC;AAC2C;AAC7B;IAO9C,OAAO,SAAP,OAAO;IAgBlB,YAAoB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;QAdpD,+BAA+B;QAE/B,yBAAyB;QACzB,QAAG,GAAG,2DAAa,CAAC,8EAAoB,CAAC,CAAC;QAE1C,+BAA+B;QAC/B,OAAE,GAAG,gEAAY,EAAE,CAAC;QAKpB,iDAAiD;QACjD,SAAI,GAAe,EAAE,CAAC;IAEkC,CAAC;IAEzD,QAAQ;QAEN,0EAA0E;QAC1E,8DAAU,CAAC,yDAAK,CAAC,8DAAU,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE;YAEvD,gDAAgD;YAChD,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;YAEd,iCAAiC;YACjC,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;gBAErB,mCAAmC;gBACnC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;gBAEtB,sCAAsC;gBACtC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;gBAErB,8DAA8D;gBAC9D,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAE3B,CAAC,CAAC,CAAC;QAEL,CAAC,CAAC,CAAC;IAEL,CAAC;IAEK,IAAI,CAAC,UAAU,EAAE,SAAS;;YAC9B,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,MAAM,EAAE,UAAU;gBAClB,OAAO,EAAE,SAAS;gBAClB,OAAO,EAAE,CAAC,IAAI,CAAC;aAChB,CAAC,CAAC;YACH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;QACxB,CAAC;KAAA;CACF;;YAhEQ,2DAAe;;AAYX,OAAO;IALnB,wDAAS,CAAC;QACT,QAAQ,EAAE,SAAS;QACnB,gEAA8B;;KAE/B,CAAC;GACW,OAAO,CAoDnB;AApDmB","sources":["./src/app/page/faq/faq-routing.module.ts","./src/app/page/faq/faq.module.ts","./src/app/page/faq/faq.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FaqPage } from './faq.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FaqPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FaqPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FaqPageRoutingModule } from './faq-routing.module';\n\nimport { FaqPage } from './faq.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    FaqPageRoutingModule\n  ],\n  declarations: [FaqPage]\n})\nexport class FaqPageModule {}\n","import { Component, OnInit } from '@angular/core';\r\nimport { AlertController } from '@ionic/angular';\r\n\r\n// Importa todas as dependências necessárias\r\nimport { initializeApp } from 'firebase/app';\r\nimport { collection, query, where, onSnapshot, getFirestore } from 'firebase/firestore';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-faq',\r\n  templateUrl: './faq.page.html',\r\n  styleUrls: ['./faq.page.scss'],\r\n})\r\nexport class FaqPage implements OnInit {\r\n\r\n  ///// Variáveis da página /////\r\n\r\n  // Conexão com o Firebase\r\n  app = initializeApp(environment.firebase);\r\n\r\n  // Conexão com o banco de dados\r\n  db = getFirestore();\r\n\r\n  // Vai armazenar cada FAQ obtido\r\n  faq: any;\r\n\r\n  // Vai armazenar todos os FAQ obtidos para a view\r\n  faqs: Array<any> = [];\r\n\r\n  constructor(private alertController: AlertController) { }\r\n\r\n  ngOnInit() {\r\n\r\n    // Conectar ao banco de dados e obtém todos os documentos da coleção 'faq'\r\n    onSnapshot(query(collection(this.db, 'faq')), (myFaqs) => {\r\n\r\n      // Limpa a lista de FAQ para carregar novamente.\r\n      this.faq = [];\r\n\r\n      // Loop que itera cada faq obtida\r\n      myFaqs.forEach((doc) => {\r\n\r\n        // Armazena dados na variável 'faq'\r\n        this.faq = doc.data();\r\n\r\n        // Armazena o ID do documento em 'faq'\r\n        this.faq.id = doc.id;\r\n\r\n        // Adiciona conteúdo de 'faq' em 'faqs' para ser usado na view\r\n        this.faqs.push(this.faq);\r\n\r\n      });\r\n\r\n    });\r\n\r\n  }\r\n\r\n  async show(alertTitle, alertText) {\r\n    const alert = await this.alertController.create({\r\n      header: alertTitle,\r\n      message: alertText,\r\n      buttons: ['Ok']\r\n    });\r\n    await alert.present();\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}