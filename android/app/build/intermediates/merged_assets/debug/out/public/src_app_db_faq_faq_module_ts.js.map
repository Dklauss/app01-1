{"version":3,"file":"src_app_db_faq_faq_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAElB;AAErC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8CAAO;KACnB;CACF,CAAC;IAMW,oBAAoB,SAApB,oBAAoB;CAAG;AAAvB,oBAAoB;IAJhC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,oBAAoB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBQ;AACM;AACF;AAEA;AAEe;AAEvB;IAWxB,aAAa,SAAb,aAAa;CAAG;AAAhB,aAAa;IATzB,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,qEAAoB;SACrB;QACD,YAAY,EAAE,CAAC,8CAAO,CAAC;KACxB,CAAC;GACW,aAAa,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACnBwB;AAElD,uBAAuB;AACsB;AACc;AACT;AACM;IAO3C,OAAO,SAAP,OAAO;IAoClB;QAlCA,6CAA6C;QAC7C,SAAI,GAAG;YACL;gBACE,QAAQ,EAAE,qCAAqC;gBAC/C,QAAQ,EAAE,mCAAmC;aAC9C;YACD;gBACE,QAAQ,EAAE,sCAAsC;gBAChD,QAAQ,EAAE,wCAAwC;aACnD;YACD;gBACE,QAAQ,EAAE,uCAAuC;gBACjD,QAAQ,EAAE,+BAA+B;aAC1C;YACD;gBACE,QAAQ,EAAE,uCAAuC;gBACjD,QAAQ,EAAE,mCAAmC;aAC9C;YACD;gBACE,QAAQ,EAAE,mCAAmC;gBAC7C,QAAQ,EAAE,uCAAuC;aAClD;YACD;gBACE,QAAQ,EAAE,mCAAmC;gBAC7C,QAAQ,EAAE,+BAA+B;aAC1C;SACF,CAAC;QAEF,gEAAgE;QAChE,QAAG,GAAG,2DAAa,CAAC,8EAAoB,CAAC,CAAC;QAE1C,wBAAwB;QACxB,OAAE,GAAG,gEAAY,EAAE,CAAC;IAEJ,CAAC;IAEjB,QAAQ,KAAK,CAAC;IAEd;;;OAGG;IACH,MAAM;QAEJ,eAAe;QACf,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAM,EAAE,EAAC,EAAE,CAAC;YAE5B,gFAAgF;YAChF,IAAI;gBACF,MAAM,MAAM,GAAG,MAAM,0DAAM,CAAC,8DAAU,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE;oBACtD,QAAQ,EAAE,EAAE,CAAC,QAAQ;oBACrB,QAAQ,EAAE,EAAE,CAAC,QAAQ;iBACtB,CAAC,CAAC;gBAEH,mDAAmD;gBACnD,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC;gBAE1D,kBAAkB;aACnB;YAAC,OAAO,CAAC,EAAE;gBAEV,qCAAqC;gBACrC,OAAO,CAAC,KAAK,CAAC,+BAA+B,EAAE,CAAC,CAAC,CAAC;aACnD;QAEH,CAAC,EAAC,CAAC;IAEL,CAAC;CAEF;;AAtEY,OAAO;IALnB,wDAAS,CAAC;QACT,QAAQ,EAAE,SAAS;QACnB,gEAA8B;;KAE/B,CAAC;GACW,OAAO,CAsEnB;AAtEmB","sources":["./src/app/db/faq/faq-routing.module.ts","./src/app/db/faq/faq.module.ts","./src/app/db/faq/faq.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FaqPage } from './faq.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FaqPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FaqPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FaqPageRoutingModule } from './faq-routing.module';\n\nimport { FaqPage } from './faq.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    FaqPageRoutingModule\n  ],\n  declarations: [FaqPage]\n})\nexport class FaqPageModule {}\n","import { Component, OnInit } from '@angular/core';\n\n// Importa dependências\nimport { initializeApp } from 'firebase/app';\nimport { environment } from 'src/environments/environment';\nimport { getFirestore } from 'firebase/firestore';\nimport { collection, addDoc } from 'firebase/firestore';\n\n@Component({\n  selector: 'app-faq',\n  templateUrl: './faq.page.html',\n  styleUrls: ['./faq.page.scss'],\n})\nexport class FaqPage implements OnInit {\n\n  // Dados a serem armazenados na coleção 'faq'\n  data = [\n    {\n      question: 'Por que este aplicativo é tão feio?',\n      response: 'Porque o fessô enxerga muito mal.'\n    },\n    {\n      question: 'Por que este aplicativo não é verde?',\n      response: 'Porque o fessô enxerga somente o azul.'\n    },\n    {\n      question: 'Por que este aplicativo não faz nada?',\n      response: 'Porque ainda estamos fazendo.'\n    },\n    {\n      question: 'Por que este aplicativo não funciona?',\n      response: 'Porque não serve para nada mesmo.'\n    },\n    {\n      question: 'Como cadastrar um novo documento?',\n      response: 'Faça upload usando alguma ferramenta.'\n    },\n    {\n      question: 'Como alterar o nome do documento?',\n      response: 'Acesse a função que faz isso.'\n    }\n  ];\n\n  // Conexão com Firebase. Observe o uso da chave de 'environment'\n  app = initializeApp(environment.firebase);\n\n  // Conexão com Firestore\n  db = getFirestore();\n\n  constructor() { }\n\n  ngOnInit() { }\n\n  /**\n   * Função que salva os dados 'data' no banco de dados.\n   * Esta função é executada pelo 'click' no botão da view.\n   */\n  create() {\n\n    // Itera 'data'\n    this.data.forEach(async el => {\n\n      // Tentar armazenar cada documento (addDoc()) na coleção 'manual' (collection())\n      try {\n        const docRef = await addDoc(collection(this.db, 'faq'), {\n          question: el.question,\n          response: el.response\n        });\n\n        // Se deu certo, exibe o ID do documento no console\n        console.log('Documento adicionado com o ID: ', docRef.id);\n\n        // Se de errado...\n      } catch (e) {\n\n        // Exibe mensagem de eror no console.\n        console.error('Erro ao adicionar documento: ', e);\n      }\n\n    });\n\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}